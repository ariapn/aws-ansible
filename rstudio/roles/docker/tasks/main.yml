---
- fail: msg="docker_ca_cert is undefined"
  when: docker_ca_cert == ''

- fail: msg="docker_tls_cert is undefined"
  when: docker_tls_cert == ''

- fail: msg="docker_tls_key is undefined"
  when: docker_tls_key == ''

- name: install docker
  yum: name=docker state=present

- name: add docker group
  group: name=docker state=present
  register: user_task

- name: add ec2-user to docker group
  user: name=ec2-user groups=docker append=yes

- name: create docker TLS directory
  file: path=/home/ec2-user/.docker state=directory group=ec2-user owner=ec2-user mode=0700

- name: install docker TLS certificates
  template: src={{ item.from }} dest={{ item.to }} group=ec2-user owner=ec2-user mode=0600
  with_items:
    - from: ca.pem.j2
      to: /home/ec2-user/.docker/ca.pem
    - from: cert.pem.j2
      to: /home/ec2-user/.docker/cert.pem
    - from: key.pem.j2
      to: /home/ec2-user/.docker/key.pem

- name: docker-py
  pip: name=docker state=present

- name: stop running docker containers
  shell: docker stop $(docker ps -a -q) || true

- name: remove docker containers
  shell: docker rm -v $(docker ps -a -q) || true

- name: run docker cleanup cronjob
  cron: name="docker cleanup" minute=15 user="ec2-user" job="/usr/bin/docker rmi $(/usr/bin/docker images -q --filter 'dangling=true')"

- name: set DOCKER_HOST
  lineinfile: dest=/etc/environment state=present line="DOCKER_HOST=tcp://{{ private_ip }}:2375"

- name: set DOCKER_TLS_VERIFY
  lineinfile: dest=/etc/environment state=present line="DOCKER_TLS_VERIFY=1"

- name: set DOCKER_CERT_PATH
  lineinfile: dest=/etc/environment state=present line="DOCKER_CERT_PATH=/home/ec2-user/.docker"

- name: create a systemd directory
  file: path=/lib/systemd/system/docker.service.d state=directory

- name: copy systemd configuration file
  template: src=docker-host.conf.j2 dest=/lib/systemd/system/docker.service.d/docker-host.conf

- name: stop docker daemon
  service: name=docker state=stopped

- name: Reload systemd
  command: systemctl daemon-reload

- name: start docker daemon
  service: name=docker state=started
